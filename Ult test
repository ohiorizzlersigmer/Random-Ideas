-- Animation replacement mapping
local animationReplacements = {
[11343318134] = 13876406148,  -- Death Counter -> Fourfold End
[11343318134] = 76530443909428,  -- Table Flip -> Whirlwind Finisher
[12983333733] = 13071982935,  -- Serious Punch -> Hollow Purple
[13927612951] = 13365849295,  -- Omni Directional Punch start -> Scatter End
[13929182266] = 13497875049,  -- Omni Directional Punch end -> Ultimate Activation end
[10468665991] = 13073745835,  -- Normal Punch -> Reversal Red
[10466974800] = 12534735382,  -- Consecutive Punches -> Machine Blow
[10471336737] = 15124762088,  -- Shove -> Blue Swipe
[12510170988] = 17838006839,  -- Uppercut -> Vanishing Kick
}

-- Ult animation ID
local ultAnimationId = 12447707844  -- Replace with your actual ult animation ID

-- Function to update the toolbar with the new ult moves (1, 2, 3, and 4)
local function updateMoveNamesAfterUlt()
local player = game.Players.LocalPlayer
local playerGui = player.PlayerGui
local hotbar = playerGui:FindFirstChild("Hotbar")
local backpack = hotbar:FindFirstChild("Backpack")
local hotbarFrame = backpack:FindFirstChild("Hotbar")

-- Update Move 1 Name  
local baseButton = hotbarFrame:FindFirstChild("1").Base  
local ToolName = baseButton.ToolName  
ToolName.Text = "Reversal Counter"  

-- Update Move 2 Name  
baseButton = hotbarFrame:FindFirstChild("2").Base  
ToolName = baseButton.ToolName  
ToolName.Text = "Max Blue"  

-- Update Move 3 Name  
baseButton = hotbarFrame:FindFirstChild("3").Base  
ToolName = baseButton.ToolName  
ToolName.Text = "200% Hollow Purple"  

-- Update Move 4 Name  
baseButton = hotbarFrame:FindFirstChild("4").Base  
ToolName = baseButton.ToolName  
ToolName.Text = "Directed Hollow"

end

-- Function to update the toolbar with the base moves (1, 2, 3, and 4)
local function updateBaseMoveNames()
local player = game.Players.LocalPlayer
local playerGui = player.PlayerGui
local hotbar = playerGui:FindFirstChild("Hotbar")
local backpack = hotbar:FindFirstChild("Backpack")
local hotbarFrame = backpack:FindFirstChild("Hotbar")

-- Update Move 1 Name  
local baseButton = hotbarFrame:FindFirstChild("1").Base  
local ToolName = baseButton.ToolName  
ToolName.Text = "Reversal Red"  

-- Update Move 2 Name  
baseButton = hotbarFrame:FindFirstChild("2").Base  
ToolName = baseButton.ToolName  
ToolName.Text = "Blitz Storm"  

-- Update Move 3 Name  
baseButton = hotbarFrame:FindFirstChild("3").Base  
ToolName = baseButton.ToolName  
ToolName.Text = "Lapse Blue"  

-- Update Move 4 Name  
baseButton = hotbarFrame:FindFirstChild("4").Base  
ToolName = baseButton.ToolName  
ToolName.Text = "Shifting Blow"

end

local Players = game:GetService("Players")

local player = Players.LocalPlayer

local playerGui = player:WaitForChild("PlayerGui")

local function findGuiAndSetText()

local screenGui = playerGui:FindFirstChild("ScreenGui")  

if screenGui then  

    local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")  

    if magicHealthFrame then  

        local textLabel = magicHealthFrame:FindFirstChild("TextLabel")  

        if textLabel then  

            textLabel.Text = "My Students are Watchin."  

        end  

    end  

end

end

playerGui.DescendantAdded:Connect(findGuiAndSetText)

findGuiAndSetText()

-- Function to handle the replacement of animations
local function replaceAnimation(animationTrack)
local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

if animationReplacements[animationId] then  
    -- Stop the current animation  
    animationTrack:Stop()  

    -- Create the new animation  
    local newAnimId = animationReplacements[animationId]  
    local player = game.Players.LocalPlayer  
    local character = player.Character or player.CharacterAdded:Wait()  
    local humanoid = character:WaitForChild("Humanoid")  

    -- Create the new animation  
    local newAnim = Instance.new("Animation")  
    newAnim.AnimationId = "rbxassetid://" .. newAnimId  
    local newAnimTrack = humanoid:LoadAnimation(newAnim)  

    -- Set the playback speed to 2.5x for some animations  
    if newAnimId == 13723174078 or newAnimId == 76530443909428 then  
        newAnimTrack:AdjustSpeed(2.5)  
    end  

    -- Play the new animation  
    newAnimTrack:Play()  

    -- Wait for the original animation to finish  
    wait(animationTrack.Length)  

    -- Stop the new animation after it finishes  
    newAnimTrack:Stop()  

    -- Wait 0.2 seconds after the replacement animation ends, then update to base moves  
    wait(0.2)  
    updateBaseMoveNames()  
end

end

-- Function to handle the ult animation detection and update the toolbar after it ends
local function checkForUltAnimation()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

while true do  
    -- Check if the player is playing the ult animation  
    if humanoid:GetPlayingAnimationTracks() then  
        for _, animationTrack in pairs(humanoid:GetPlayingAnimationTracks()) do  
            local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))  
              
            -- If it's the ult animation, wait for it to end and then update the toolbar  
            if animationId == ultAnimationId then  
                wait(animationTrack.Length + 0.2)  -- Wait for the ult animation to end and then some buffer time  
                updateMoveNamesAfterUlt()  -- Update the toolbar with Ult Moves  
                  
                break  
            end  
        end  
    end  

    -- Wait for a short time before checking again  
    wait(0.1)  
end

end

-- Function to handle the animation played event and replacements
local function onAnimationPlayed(animationTrack)
local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

-- Handle animation replacements  
if animationReplacements[animationId] then  
    replaceAnimation(animationTrack)  
end

end

-- Connect the function to the animation played event
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Connect the animation played event to the function
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Start by updating the toolbar with the base moves
updateBaseMoveNames()

-- Start the ult animation detection loop
checkForUltAnimation()

